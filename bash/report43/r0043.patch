From 66c5a27bd9fbf87fa6ee7c6b935e22749f97a08c Mon Sep 17 00:00:00 2001
From: Koichi Murase <myoga.murase@gmail.com>
Date: Mon, 25 Nov 2024 19:26:16 +0900
Subject: [PATCH 1/2] 5.1..devel: fix "declare -A d=([k]=v1 [k]+=v2)" picking
 an old value

After commit 194cfc28, the construct `declare -A d=([k]+=v)' started
to append the new value to the old value before the assignment starts
instead of the current value.  This patch partially reverts a change
in commit 194cfc28, which became unnecessary after commit c6c7ae81.
---
 arrayfunc.c | 23 +++++------------------
 1 file changed, 5 insertions(+), 18 deletions(-)

diff --git a/arrayfunc.c b/arrayfunc.c
index 72921a18..f61a46d5 100644
--- a/arrayfunc.c
+++ b/arrayfunc.c
@@ -700,7 +700,7 @@ int
 assign_compound_array_list (SHELL_VAR *var, WORD_LIST *nlist, int flags)
 {
   ARRAY *a;
-  HASH_TABLE *h, *nhash;
+  HASH_TABLE *h;
   WORD_LIST *list;
   char *w, *val, *nval, *savecmd;
   int len, iflags, free_val, any_failed;
@@ -708,7 +708,7 @@ assign_compound_array_list (SHELL_VAR *var, WORD_LIST *nlist, int flags)
   char *akey;
 
   a = (var && array_p (var)) ? array_cell (var) : (ARRAY *)0;
-  nhash = h = (var && assoc_p (var)) ? assoc_cell (var) : (HASH_TABLE *)0;
+  h = (var && assoc_p (var)) ? assoc_cell (var) : (HASH_TABLE *)0;
 
   akey = (char *)0;
   ind = 0;
@@ -722,20 +722,14 @@ assign_compound_array_list (SHELL_VAR *var, WORD_LIST *nlist, int flags)
       if (a && array_p (var))
 	array_flush (a);
       else if (h && assoc_p (var))
-	nhash = assoc_create (h->nbuckets);
+	assoc_flush (h);
     }
 
 #if ASSOC_KVPAIR_ASSIGNMENT
   if (assoc_p (var) && kvpair_assignment_p (nlist))
     {
       iflags = flags & ~ASS_APPEND;
-      assign_assoc_from_kvlist (var, nlist, nhash, iflags);
-      if (nhash && nhash != h)
-	{
-	  h = assoc_cell (var);
-	  var_setassoc (var, nhash);
-	  assoc_dispose (h);
-	}
+      assign_assoc_from_kvlist (var, nlist, h, iflags);
       return 1;		/* XXX - check return value */
     }
 #endif
@@ -875,7 +869,7 @@ assign_compound_array_list (SHELL_VAR *var, WORD_LIST *nlist, int flags)
       if (integer_p (var))
 	this_command_name = 0;	/* no command name for errors */
       if (assoc_p (var))
-	bind_assoc_var_internal (var, nhash, akey, val, iflags);
+	bind_assoc_var_internal (var, h, akey, val, iflags);
       else
 	bind_array_var_internal (var, ind, akey, val, iflags);
       last_ind++;
@@ -885,13 +879,6 @@ assign_compound_array_list (SHELL_VAR *var, WORD_LIST *nlist, int flags)
 	free (val);
     }
 
-  if (assoc_p (var) && nhash && nhash != h)
-    {
-      h = assoc_cell (var);
-      var_setassoc (var, nhash);
-      assoc_dispose (h);
-    }
-
 #if ARRAY_EXPORT
   if (var && exported_p (var))
     {
-- 
2.46.0

